一个位图相关的东西，必须做什么，能做什么，不该做什么，如何组织这些操作，如何实现，如何更高效而合理通用？

该做什么：
1.获取位图的基本信息：高、宽、深度、大小、每行的数据长度、数据起始位置
2.对位图颜色表的操作：获取颜色数目，根据序号获取颜色，设置颜色表中的某个颜色
3.对像素的操作：获取像素的颜色，设置像素的颜色
4.对一个区域像素的操作：绘制某行的像素，用颜色填充某个区域
5.对位图不同通道的处理：对位图的某个通道的采样值进行操作（设置为固定值或按比例缩放），保存某个通道到某个位图，对换任意两个通道的数据，拷贝某个通道数据到另一个通道，将某个通道保存成mask位图
6.位图间的操作：创建一个指定位图，数据为空；从某个位图上截取某个部分，生成新的位图对象，用mask位图设置位图的某个通道或者位图的全部或部分区域；将相同深度和颜色表的位图插入到当前位图的某个位置。
7.文件级别的操作：打开和保存位图（文件路径方式和接口方式）
8.不同深度位图之间的转换

可以扩展的一些功能：
1.对位图进行放大缩小旋转等比例尺寸等操作
2.一个简单的图形绘制引擎，能够在位图上绘制直线、曲线、圆形、矩形、梯形、椭圆、多边形，每个图形有各种样式，包括边框，实线和虚线、是否反锯齿，颜色和粗细等等细节。
3.将位图压缩成其他格式的图形数据，将其他图形格式解压成位图的数据

这些可以扩展的功能不应该由位图类实现，而应该根据其功能，封装成其他对位图进行操作的类。

设计一个可以用于检测库性能的方法，不断在性能上进行改进。